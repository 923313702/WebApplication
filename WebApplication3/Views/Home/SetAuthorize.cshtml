
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>SetAuthorize</title>
    <link href="~/lib/bootstrap/dist/css/bootstrap.css" rel="stylesheet" />
    <link href="~/lib/bootstrap/dist/css/bootstrap-table.min.css" rel="stylesheet" />
    <link href="~/css/metroStyle/metroStyle.css" rel="stylesheet" />
    <link href="~/css/font-awesome.min.css" rel="stylesheet" />
    <link href="~/lib/bootstrap/dist/css/bootstrap-datetimepicker.css" rel="stylesheet" />
</head>
<body>
    <div class="container">
        <div class="table-responsive col-md-12">
            <table id="myTable" class="table text-nowrap "></table>
            <div id="myTable_toolbar">

                <div class="btn-group">
                    <button class="btn btn-default" id="add">
                        <i class="fa fa-plus-square fa-lg"></i>&nbsp;添加
                    </button>
                    <button class="btn btn-default" id="edit">
                        <i class="fa fa-pencil-square fa-lg"></i>&nbsp;修改
                    </button>
                    <button class="btn btn-default" id="remove">
                        <i class="fa fa-trash fa-lg"></i>&nbsp;删除

                    </button>
                    <button class="btn btn-default" id="addAuthorize">
                        <i class="fa fa-user-plus" aria-hidden="true"></i>&nbsp;添加权限
                    </button>
                    <button class="btn btn-default" id="removeAuthorize">
                        <i class="fa fa-user-times" aria-hidden="true"></i>&nbsp;删除权限
                    </button>
                </div>
            </div>
        </div>


        <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" flag="">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                        <h4 class="modal-title" id="myModalLabel">添加用户</h4>
                    </div>
                    <div class="modal-body">
                        <form class="form-horizontal" role="form" id="myForm">
                            <div class="form-group">
                                <label class="col-md-2 control-label" for="Name">名称</label>
                                <div class="col-md-9">
                                    <input type="text" class="form-control" id="Name" name="name" placeholder="请输入名称">
                                    <input type="hidden" name="userId" />
                                </div>

                            </div>
                            <div class="form-group">
                                <label class="col-md-2 control-label" for="Password">密码</label>
                                <div class="col-md-9">
                                    <input type="password" class="form-control" id="Password" name="password" placeholder="请输入密码">
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-md-2 control-label" for="Birth">出生年月</label>
                                <div class="col-md-9">
                                    <input type="text" class="form-control" id="Birth" name="birth" placeholder="请输入出生年月">
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-md-2 control-label" for="Gender">性别</label>
                                <div class="col-md-10">
                                    <label>
                                        <input type="radio" name="gender" value="1"> 男

                                    </label>
                                    <label>
                                        <input type="radio" name="gender" value="0"> 女
                                    </label>
                                </div>

                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">关闭</button>
                        <button type="button" class="btn btn-success" id="submit">提交</button>
                    </div>
                </div><!-- /.modal-content -->
            </div><!-- /.modal-dialog -->
        </div>


        <div class="modal fade" id="myModal2" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" flag="">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                        <h4 class="modal-title">权限操作</h4>
                    </div>
                    <div class="modal-body"style="max-height:400px;overflow:scroll;">
                        <input type="hidden" id="userId"/>
                        <div class="col-md-offset-3">
                            <ul id="myZtree2" class="ztree"></ul>
                        </div>
                      
                        <p id="msg"></p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">关闭</button>
                        <button type="button" class="btn btn-success" id="submit2">提交</button>
                    </div>
                </div><!-- /.modal-content -->
            </div><!-- /.modal-dialog -->
        </div>
    </div>

 
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap-validate.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap-table.min.js"></script>

    <script src="~/lib/bootstrap/dist/js/bootstrap-table-export.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/FileSaver.min.js"></script>

    <script src="~/lib/bootstrap/dist/js/xlsx.full.min.js"></script>

    <script src="~/lib/bootstrap/dist/js/tableExport.min.js"></script>


    <script src="~/lib/bootstrap/dist/js/bootstrap-table-zh-CN.js"></script>
    <script src="~/lib/bootstrap/dist/js/myBootStrapTable.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap-datetimepicker.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap-datetimepicker.zh-CN.js"></script>


    <script src="~/lib/bootstrap/dist/js/jquery.zTree.core.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/jquery.ztree.excheck.min.js"></script>
    <script>
        var zTree;
        $(function () { 
            var config = {
                dom: '#myTable',
                queryUrl: '/Home/GetData',
                toolbar: '#myTable_toolbar',
                fileName: Math.floor(Math.random() * 10 + 1),
                tableName: 'Staff_Table',
                columns: [
                    { checkbox: true },
                    {
                        field: 'userId', title: 'ID', align: 'center'

                    },
                    {
                        field: 'name', title: '姓名', align: 'center'

                    },
                    {
                        field: 'password', title: '密码', align: 'center'

                    },
                    {
                        field: 'gender', title: '性别', align: 'center'

                    },
                    {
                        field: 'birth', title: '出生', align: 'center'
                    }

                ],
            };
            var myTable = new baseTable();
            myTable.init(config);
            $('#Birth').datetimepicker({
                format: 'yyyy-mm-dd',//显示格式
                todayHighlight: 1,//今天高亮
                minView: "month",//设置只显示到月份
                startView: 2,
                forceParse: 0,
                showMeridian: 1,
                autoclose: 1,//选择后自动关闭
                //language: 'zh',
            }).on('hide', function (e) {
                $('#myForm').data('bootstrapValidator')
                    .updateStatus('Birth', 'NOT_VALIDATED', null)
                    .validateField('Birth ');
            });
            $('#add').on('click', function () {
                $('#myModal').attr('flag', 'add');
                $('#myModal').modal('show');


            });
            $('#edit').on('click', function () {
                var rows = $('#myTable').bootstrapTable('getSelections');
                console.log(rows[0]);
                if (rows.length != 1) { return; }
                //$.post('/Home/Edit', rows[0], function (res) {
                loadData(rows[0])
                $('#myModal').attr('flag', 'edit');
                $('#myModal').modal('show')
                //})


            })
            $('#remove').on('click', function () {
                var rows = $('#myTable').bootstrapTable('getSelections');
                if (rows.length <= 0) { return; }
                $.post('/Home/Remove', { ulist: rows }, function (res) {

                    if (res.success == 0) {
                        var ids = [];
                        for (var i in rows) {
                            ids.push(rows[i].userId);
                        }
                        $('#myTable').bootstrapTable('remove', { field: 'userId', values: ids });
                    }
                })

            })
            $("#myForm").bootstrapValidator({
                message: 'This value is not valid',
                feedbackIcons: {/*输入框不同状态，显示图片的样式*/
                    valid: 'glyphicon glyphicon-ok',
                    invalid: 'glyphicon glyphicon-remove',
                    validating: 'glyphicon glyphicon-refresh'
                },
                trigger: 'blur',
                fields: {
                    /*验证*/
                    name: {
                        /*键名username和input name值对应*/
                        message: 'The username is not valid',
                        validators: {
                            notEmpty: {
                                /*非空提示*/
                                message: '用户名不能为空'
                            },
                            regexp: {/* 只需加此键值对，包含正则表达式，和提示 */
                                regexp: /^[a-zA-Z0-9_\.]+$/,
                                message: '只能是数字和字母_.'
                            },
                            stringLength: {
                                /*长度提示*/
                                min: 5,
                                max: 30,
                                message: '用户名长度必须在6到30之间'
                            }/*最后一个没有逗号*/
                            //remote: {
                            //    //url: "/Home/CheckUser",
                            //    //message: "用户已存在",
                            //    //type: 'Post'
                            //}
                        }
                    },
                    password: {
                        /*键名username和input name值对应*/
                        message: 'The username is not valid',
                        validators: {
                            notEmpty: {
                                /*非空提示*/
                                message: '密码不能为空'
                            },
                            regexp: {/* 只需加此键值对，包含正则表达式，和提示 */
                                regexp: /^[a-zA-Z0-9_\.]+$/,
                                message: '只能是数字和字母_.'
                            },
                            stringLength: {
                                /*长度提示*/
                                min: 6,
                                max: 30,
                                message: '密码长度必须在6到30之间'
                            }/*最后一个没有逗号*/
                        }
                    },
                    birth: {
                        message: 'The username is not valid',
                        validators: {
                            notEmpty: {
                                /*非空提示*/
                                message: '出生日期不能为空'
                            }
                        }

                    }
                },

            });
            $('#myModal').on('hide.bs.modal', function () {
                // 执行一些动作...
                console.log('hello')
                $("#myForm").data('bootstrapValidator').resetForm(true);
            })
            $('#submit').on('click', function () {
                var bootstrapValidator = $("#myForm").data("bootstrapValidator");
                bootstrapValidator.validate();
                if (bootstrapValidator.isValid()) {
                    var flag = $('#myModal').attr('flag');
                    var url = flag == 'add' ? '/Home/Add' : '/Home/Edit';
                    $.ajax({
                        url: url,
                        data: $("#myForm").serialize(),
                        type: "POST",
                        success: function (data) {

                            showPopovber($("#submit"), data.msg);
                            $("#myForm").data('bootstrapValidator').resetForm(true);
                            //$("#myForm").data('bootstrapValidator').destroy();

                            //$('#myForm').data('bootstrapValidator', null);
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            alert(XMLHttpRequest.status)
                        }

                    })

                }

            })

            $('#addAuthorize').on('click', function () {

                var rows = $('#myTable').bootstrapTable('getSelections');
                if (rows.length != 1) { return; }
                $('#userId').val(rows[0].userId);
                $('#myModal2').attr('flag', 'add');
                setting.async.url = '/Home/GetTree';
                zTree = $.fn.zTree.init($("#myZtree2"), setting, null);
                $('#myModal2').modal('show');
              


            })
            $('#removeAuthorize').on('click', function () {
                var rows = $('#myTable').bootstrapTable('getSelections');
                if (rows.length != 1) { return; }
                $('#myModal2').attr('flag', 'edit');
                $('#userId').val(rows[0].userId);
                setting.async.url = '/Home/GetTree?userId=' + $('#userId').val();
                zTree = $.fn.zTree.init($("#myZtree2"), setting, null);
                $('#myModal2').modal('show');
            });
            $('#submit2').on('click', function () { 
                var flag = $('#myModal2').attr('flag');
                var nodes = zTree.getCheckedNodes(true);
                var url = flag == 'add' ? '/Home/AddAuthorize' :'/Home/RemoveAuthorize'
                var list = [];
                var userId = $('#userId').val();
                for (var i in nodes) { 
                    var obj = {};
                    obj.RoleId = nodes[i].roleId;
                    obj.UserId = userId;
                    list.push(obj);
                }
                ajaxOper(url, { urs: list }, function (res) { 
                    if (res.success == 0) {
                        for (var i in nodes) {
                            zTree.removeNode(nodes[i]);
                        }
                    } else { 
                        alert(res.msg);
                    }
                })

            })

            var setting = {
                async: {
                    enable: true,  
                    url: '/Home/GetTree?',
                    type: 'get'
                },
                data: {//表示tree的数据格式
                    simpleData: {
                        enable: true,//表示使用简单数据模式
                        idKey: "id",//设置之后id为在简单数据模式中的父子节点关联的桥梁
                        pidKey: "pId",//设置之后pid为在简单数据模式中的父子节点关联的桥梁和id互相对应
                        rootId: null//pid为null的表示根节点
                    },
                    key: {
                        // checked: 'checked',
                        children: 'children',
                        isParent: 'isParent',
                        name: 'name'

                    }
                },
                check: {
                    chkboxType: { 'Y': 'ps', 'N': 'ps' },
                    chkStyle: 'checkbox',
                    enable:true,
                },
                view: {
                    autoCancelSelected: false,
                    //txtSelectedEnable:true
                },
                callback: {
                    onClick:onClick
                }
            }
            
        })
       
        function onClick(event, treeId, treeNode) {
            if (treeNode.isParent) {
                zTree.expandNode(treeNode)
            }

        }
       
        function showPopovber(element, msg) {
            element.popover({ title: "提示", placement: 'top', html: true, content: msg })
            element.popover("show");
            setTimeout(function () { element.popover("destroy"); }, 4000);

        }
        function loadData(obj) {
            //var obj = eval("(" + jsonStr + ")");
            var key, value, tagName, type, arr;

            for (x in obj) {
                key = x;
                value = obj[x];

                $("[name='" + key + "']"/*,[name='" + key + "[]']*/).each(function () {
                    console.log($("[name='" + key + "']").val())
                    tagName = $(this)[0].tagName;
                    type = $(this).attr('type');
                    if (tagName == 'INPUT') {
                        if (type == 'radio') {
                            $(this).attr('checked', $(this).val() == value);
                        } else if (type == 'checkbox') {
                            arr = value.split(',');
                            for (var i = 0; i < arr.length; i++) {
                                if ($(this).val() == arr[i]) {
                                    $(this).attr('checked', true);
                                    break;
                                }
                            }
                        } else {
                            $(this).val(value);
                        }
                    } else if (tagName == 'SELECT' || tagName == 'TEXTAREA') {
                        $(this).val(value);
                    }

                });
            }
        }

        function ajaxOper(url, data, callback) { 
            $.ajax({
                url: url,
                type: 'post',
                data: data,
                success: function (response) {
                    callback(response);
                },
                error: function (XMLHttpRequest, testStatus, errorThrown) {
                    $.messager.alert('My Title', XMLHttpRequest.status, 'warning')
                }
            })
        }
    </script>
</body>
</html>
